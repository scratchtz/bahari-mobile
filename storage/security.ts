import secureStorage from 'react-native-encrypted-storage';

/*
    We store our keys and all sensitive data in MMKV storage in encrypted form.
    The encryption key is generated by Crypto random 256 bit key NOT user's password.
    We store the encryption key in secureStorage which uses keychain and encrypted preferences for Android.
    In order for the app to function we getEncryptionKey first, decrypt MMKV instance then have access to the private keys.
*/
const EncryptionKeyStorageKey = 'encryption-key';
const PasswordStorageKey = 'unlock-wallet-password';
//storeEncryptionKey - stores encryption key in secure storage
const storeEncryptionKey = (key: string): Promise<void> => {
    return secureStorage.setItem(EncryptionKeyStorageKey, key);
};

//getEncryptionKey - retrieves encryption key in secure storage
const getEncryptionKey = (): Promise<string | null> => {
    return secureStorage.getItem(EncryptionKeyStorageKey);
};

const storePassword = (password: string): Promise<void> => {
    return secureStorage.setItem(PasswordStorageKey, password);
};

const getPassword = (): Promise<string | null> => {
    return secureStorage.getItem(PasswordStorageKey);
};

//reset - wipes the whole encryption storage, like a wallet reset.
const reset = (): Promise<void> => {
    return secureStorage.clear();
};

export default {
    storeEncryptionKey,
    getEncryptionKey,
    reset,
    storePassword,
    getPassword,
};
